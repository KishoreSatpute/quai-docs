"use strict";(self.webpackChunkquai_docs=self.webpackChunkquai_docs||[]).push([[6094],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>k});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=n.createContext({}),o=function(e){var a=n.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},d=function(e){var a=o(e.components);return n.createElement(u.Provider,{value:a},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=o(t),m=l,k=c["".concat(u,".").concat(m)]||c[m]||p[m]||r;return t?n.createElement(k,i(i({ref:a},d),{},{components:t})):n.createElement(k,i({ref:a},d))}));function k(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var u in a)hasOwnProperty.call(a,u)&&(s[u]=a[u]);s.originalType=e,s[c]="string"==typeof e?e:l,i[1]=s;for(var o=2;o<r;o++)i[o]=t[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3008:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var n=t(7462),l=(t(7294),t(3905));const r={title:"JSON-RPC API",description:"Detailed specification of the Quai Network JSON-RPC API.",slug:"/json-rpc-api",hide_table_of_contents:!1,sidebar_position:1},i="JSON-RPC API",s={unversionedId:"develop/apis/json-rpc-api",id:"develop/apis/json-rpc-api",title:"JSON-RPC API",description:"Detailed specification of the Quai Network JSON-RPC API.",source:"@site/docs/develop/apis/json-rpc-api.md",sourceDirName:"develop/apis",slug:"/json-rpc-api",permalink:"/quai-docs/json-rpc-api",draft:!1,editUrl:"https://github.com/dominant-strategies/quai-docs/tree/main/docs/develop/apis/json-rpc-api.md",tags:[],version:"current",lastUpdatedBy:"Juuddi",lastUpdatedAt:1691613047,formattedLastUpdatedAt:"Aug 9, 2023",sidebarPosition:1,frontMatter:{title:"JSON-RPC API",description:"Detailed specification of the Quai Network JSON-RPC API.",slug:"/json-rpc-api",hide_table_of_contents:!1,sidebar_position:1},sidebar:"developSidebar",previous:{title:"APIs",permalink:"/quai-docs/category/apis"}},u={},o=[{value:"Convenience Libraries",id:"convenience-libraries",level:2},{value:"Conventions",id:"conventions",level:2},{value:"Hexidecimal Encoding",id:"hexidecimal-encoding",level:3},{value:"Quantities",id:"quantities",level:4},{value:"Unformatted Data",id:"unformatted-data",level:4},{value:"Default Block Parameter",id:"default-block-parameter",level:3},{value:"Curl Examples",id:"curl-examples",level:2},{value:"JSON-RPC API Methods",id:"json-rpc-api-methods",level:2},{value:"quai_gasPrice",id:"quai_gasprice",level:3},{value:"Input Parameters",id:"input-parameters",level:4},{value:"Example Request",id:"example-request",level:4},{value:"Returns",id:"returns",level:4},{value:"quai_maxPriorityFeePerGas",id:"quai_maxpriorityfeepergas",level:3},{value:"Input Parameters",id:"input-parameters-1",level:4},{value:"Example Request",id:"example-request-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"quai_feeHistory",id:"quai_feehistory",level:3},{value:"Input Parameters",id:"input-parameters-2",level:4},{value:"Example Request",id:"example-request-2",level:3},{value:"Returns",id:"returns-2",level:4},{value:"quai_syncing",id:"quai_syncing",level:3},{value:"Input Parameters",id:"input-parameters-3",level:4},{value:"Example Request",id:"example-request-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"quai_chainId",id:"quai_chainid",level:3},{value:"Input Parameters",id:"input-parameters-4",level:4},{value:"Example Request",id:"example-request-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"quai_nodeLocation",id:"quai_nodelocation",level:3},{value:"Input Parameters",id:"input-parameters-5",level:4},{value:"Example Request",id:"example-request-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"quai_blockNumber",id:"quai_blocknumber",level:3},{value:"Input Parameters",id:"input-parameters-6",level:4},{value:"Example Request",id:"example-request-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"quai_getBalance",id:"quai_getbalance",level:3},{value:"Input Parameters",id:"input-parameters-7",level:4},{value:"Example Request",id:"example-request-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"quai_getProof",id:"quai_getproof",level:3},{value:"Input Parameters",id:"input-parameters-8",level:4},{value:"Example Request",id:"example-request-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"quai_getHeaderHashByNumber",id:"quai_getheaderhashbynumber",level:3},{value:"Input Parameters",id:"input-parameters-9",level:4},{value:"Example Request",id:"example-request-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"quai_getHeaderByHash",id:"quai_getheaderbyhash",level:3},{value:"Input Parameters",id:"input-parameters-10",level:4},{value:"Example Request",id:"example-request-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"quai_getHeaderByNumber",id:"quai_getheaderbynumber",level:3},{value:"Input Parameters",id:"input-parameters-11",level:4},{value:"Example Request",id:"example-request-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"quai_getBlockByNumber",id:"quai_getblockbynumber",level:3},{value:"Input Parameters",id:"input-parameters-12",level:4},{value:"Example Request",id:"example-request-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"quai_getBlockByHash",id:"quai_getblockbyhash",level:3},{value:"Input Parameters",id:"input-parameters-13",level:4},{value:"Example Request",id:"example-request-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"quai_getUncleByBlockNumberAndIndex",id:"quai_getunclebyblocknumberandindex",level:3},{value:"Input Parameters",id:"input-parameters-14",level:4},{value:"Example Request",id:"example-request-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"quai_getUncleByBlockHashAndIndex",id:"quai_getunclebyblockhashandindex",level:3},{value:"Input Parameters",id:"input-parameters-15",level:4},{value:"Example Request",id:"example-request-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"quai_getUncleCountByBlockNumber",id:"quai_getunclecountbyblocknumber",level:3},{value:"Input Parameters",id:"input-parameters-16",level:4},{value:"Example Request",id:"example-request-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"quai_getUncleCountByBlockHash",id:"quai_getunclecountbyblockhash",level:3},{value:"Input Parameters",id:"input-parameters-17",level:4},{value:"Example Request",id:"example-request-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"quai_getCode",id:"quai_getcode",level:3},{value:"Input Parameters",id:"input-parameters-18",level:4},{value:"Example Request",id:"example-request-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"quai_getStorageAt",id:"quai_getstorageat",level:3},{value:"Input Parameters",id:"input-parameters-19",level:4},{value:"Example Request",id:"example-request-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"quai_call",id:"quai_call",level:3},{value:"Input Parameters",id:"input-parameters-20",level:4},{value:"Example Request",id:"example-request-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"quai_sendRawTransaction",id:"quai_sendrawtransaction",level:3},{value:"Input Parameters",id:"input-parameters-21",level:4},{value:"Example Request",id:"example-request-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"quai_estimateGas",id:"quai_estimategas",level:3},{value:"Input Parameters",id:"input-parameters-22",level:4},{value:"Example Request",id:"example-request-22",level:4},{value:"Returns",id:"returns-22",level:4},{value:"quai_getBlockTransactionCountByNumber",id:"quai_getblocktransactioncountbynumber",level:3},{value:"Input Parameters",id:"input-parameters-23",level:4},{value:"Example Request",id:"example-request-23",level:4},{value:"Returns",id:"returns-23",level:4},{value:"quai_getBlockTransactionCountByHash",id:"quai_getblocktransactioncountbyhash",level:3},{value:"Input Parameters",id:"input-parameters-24",level:4},{value:"Example Request",id:"example-request-24",level:4},{value:"Returns",id:"returns-24",level:4},{value:"quai_getTransactionByBlockNumberAndIndex",id:"quai_gettransactionbyblocknumberandindex",level:3},{value:"Input Parameters",id:"input-parameters-25",level:4},{value:"Example Request",id:"example-request-25",level:4},{value:"Returns",id:"returns-25",level:4},{value:"quai_getTransactionByBlockHashAndIndex",id:"quai_gettransactionbyblockhashandindex",level:3},{value:"Input Parameters",id:"input-parameters-26",level:4},{value:"Example Request",id:"example-request-26",level:4},{value:"Returns",id:"returns-26",level:4},{value:"quai_getRawTransactionByBlockNumberAndIndex",id:"quai_getrawtransactionbyblocknumberandindex",level:3},{value:"Input Parameters",id:"input-parameters-27",level:4},{value:"Example Request",id:"example-request-27",level:4},{value:"Returns",id:"returns-27",level:4},{value:"quai_getRawTransactionByBlockHashAndIndex",id:"quai_getrawtransactionbyblockhashandindex",level:3},{value:"Input Parameters",id:"input-parameters-28",level:4},{value:"Example Request",id:"example-request-28",level:4},{value:"Returns",id:"returns-28",level:4},{value:"quai_getTransactionCount",id:"quai_gettransactioncount",level:3},{value:"Input Parameters",id:"input-parameters-29",level:4},{value:"Example Request",id:"example-request-29",level:4},{value:"Returns",id:"returns-29",level:4},{value:"quai_getTransactionByHash",id:"quai_gettransactionbyhash",level:3},{value:"Input Parameters",id:"input-parameters-30",level:4},{value:"Example Request",id:"example-request-30",level:4},{value:"Returns",id:"returns-30",level:4},{value:"quai_getRawTransactionByHash",id:"quai_getrawtransactionbyhash",level:3},{value:"Input Parameters",id:"input-parameters-31",level:4},{value:"Example Request",id:"example-request-31",level:4},{value:"Returns",id:"returns-31",level:4},{value:"txpool_content",id:"txpool_content",level:3},{value:"Input Parameters",id:"input-parameters-32",level:4},{value:"Example Request",id:"example-request-32",level:4},{value:"Returns",id:"returns-32",level:4},{value:"txpool_contentFrom",id:"txpool_contentfrom",level:3},{value:"Input Parameters",id:"input-parameters-33",level:4},{value:"Example Request",id:"example-request-33",level:4},{value:"Returns",id:"returns-33",level:4},{value:"txpool_inspect",id:"txpool_inspect",level:3},{value:"Input Parameters",id:"input-parameters-34",level:4},{value:"Example Request",id:"example-request-34",level:4},{value:"Returns",id:"returns-34",level:4},{value:"txpool_status",id:"txpool_status",level:3},{value:"Input Parameters",id:"input-parameters-35",level:4},{value:"Example Request",id:"example-request-35",level:4},{value:"Returns",id:"returns-35",level:4},{value:"net_listening",id:"net_listening",level:3},{value:"Input Parameters",id:"input-parameters-36",level:4},{value:"Example Request",id:"example-request-36",level:4},{value:"Returns",id:"returns-36",level:4},{value:"net_peerCount",id:"net_peercount",level:3},{value:"Input Parameters",id:"input-parameters-37",level:4},{value:"Example Request",id:"example-request-37",level:4},{value:"Returns",id:"returns-37",level:4},{value:"net_version",id:"net_version",level:3},{value:"Input Parameters",id:"input-parameters-38",level:4},{value:"Example Request",id:"example-request-38",level:4},{value:"Returns",id:"returns-38",level:4},{value:"debug_getBlockRlp",id:"debug_getblockrlp",level:3},{value:"Input Parameters",id:"input-parameters-39",level:4},{value:"Example Request",id:"example-request-39",level:4},{value:"Returns",id:"returns-39",level:4},{value:"debug_printBlock",id:"debug_printblock",level:3},{value:"Input Parameters",id:"input-parameters-40",level:4},{value:"Example Request",id:"example-request-40",level:4},{value:"Returns",id:"returns-40",level:4},{value:"debug_chaindbProperty",id:"debug_chaindbproperty",level:3},{value:"Input Parameters",id:"input-parameters-41",level:4},{value:"Example Request",id:"example-request-41",level:4},{value:"Returns",id:"returns-41",level:4}],d={toc:o},c="wrapper";function p(e){let{components:a,...t}=e;return(0,l.kt)(c,(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"json-rpc-api"},"JSON-RPC API"),(0,l.kt)("h2",{id:"convenience-libraries"},"Convenience Libraries"),(0,l.kt)("p",null,"While some developers may opt to interact directly with the JSON-RPC API detailed below, there are also a number of Javascript based convenience libraries designed to make data interaction much easier. Convenience libraries abstract much of the complexity of direct API calls out into simple one-line methods. These methods are also easily portable into decentralized applications and help make backend logic more concise and readable. The primary convenience library used to interact with Quai Network is ",(0,l.kt)("a",{parentName:"p",href:"https://qu.ai"},"quais.js"),"."),(0,l.kt)("p",null,"A ",(0,l.kt)("a",{parentName:"p",href:"https://qu.ai"},"postman")," library containing templates for all of the RPC methods detailed below is also available at the ",(0,l.kt)("a",{parentName:"p",href:"https://qu.ai"},"Quai API workspace"),"."),(0,l.kt)("h2",{id:"conventions"},"Conventions"),(0,l.kt)("h3",{id:"hexidecimal-encoding"},"Hexidecimal Encoding"),(0,l.kt)("p",null,"When making calls to a node, data can be passed or returned in two types via JSON. These types are quantities and unformatted byte arrays. Both utilize hex encoding for compact representation but have slightly different formatting requirements."),(0,l.kt)("h4",{id:"quantities"},"Quantities"),(0,l.kt)("p",null,"When encoding quantities like numbers and integers, use the following format:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Encode as a hexadecimal"),(0,l.kt)("li",{parentName:"ul"},'Prefix all data with "0x"'),(0,l.kt)("li",{parentName:"ul"},'Example: 21000 in decimal is "0x5208"')),(0,l.kt)("h4",{id:"unformatted-data"},"Unformatted Data"),(0,l.kt)("p",null,"To encode unformatted data such as addresses, byte arrays, hashes, etc. - use the folllowing format:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Encode as a hexadecimal"),(0,l.kt)("li",{parentName:"ul"},'Prefix with "0x"'),(0,l.kt)("li",{parentName:"ul"},"Two hex digits per byte of data, with an even number of digits only"),(0,l.kt)("li",{parentName:"ul"},'Example: hello is encoded as "0x48656C6C6F"')),(0,l.kt)("h3",{id:"default-block-parameter"},"Default Block Parameter"),(0,l.kt)("p",null,"The default block parameter is an extra parameter that can be passed when querying the state of Quai Network. This parameter allows you to specify a specific block or state of Quai that you would like to receive data from. When not passed in a call, this parameter defaults to the height of the most recent block."),(0,l.kt)("p",null,"Available options for this parameter are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"earliest")," - genesis block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"latest")," - most recently mined block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pending")," - pending state changes"),(0,l.kt)("li",{parentName:"ul"},"integer block number")),(0,l.kt)("p",null,"The default block parameter can be passed to the following methods:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_getbalance"},"quai_getBalance")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_getproof"},"quai_getProof")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_getcode"},"quai_getCode")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_getstorageat"},"quai_getStorageAt")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_call"},"quai_call")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_estimategas"},"quai_estimateGas")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#quai_gettransactioncount"},"quai_getTransactionCount"))),(0,l.kt)("h2",{id:"curl-examples"},"Curl Examples"),(0,l.kt)("p",null,"The below section details using the JSON-RPC API to make curl requests to a Quai Network node. Each example includes a description of the endpoint, parameters, return type, and an illustration of its usage."),(0,l.kt)("p",null,'You might encounter an error message related to the content type, as the --data option sets it to application/x-www-form-urlencoded. To fix this, include -H "Content-Type: application/json" at the start of the call. Note that the examples do not include the full request headers, flags, and URL/IP & port combination, but only the data for simplicity.'),(0,l.kt)("p",null,"A complete curl request including these additional data would look like:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST \\\nhttp://127.0.0.1:8512 \\\n-H \'Content-Type: application/json\' \\\n--data \'{\n    "jsonrpc": "2.0",\n    "method": "quai_syncing",\n    "params": [],\n    "id": 1\n}\'\n')),(0,l.kt)("p",null,"Depending on the chain you're requesting data from, the port (in the example 8512) the request is being routed to will change."),(0,l.kt)("h2",{id:"json-rpc-api-methods"},"JSON-RPC API Methods"),(0,l.kt)("h3",{id:"quai_gasprice"},"quai_gasPrice"),(0,l.kt)("p",null,"Returns the gas price."),(0,l.kt)("h4",{id:"input-parameters"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_gasPrice",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasPrice: Quantity")," - Current gas price")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": "0x3b9aca01" // 1000000001\n}\n')),(0,l.kt)("h3",{id:"quai_maxpriorityfeepergas"},"quai_maxPriorityFeePerGas"),(0,l.kt)("p",null,"Returns the maximum priority fee per unit of gas."),(0,l.kt)("h4",{id:"input-parameters-1"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-1"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_maxPriorityFeePerGas",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-1"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"maxPriorityFeePerGas: Quantity")," - Current maximum priority fee per unit of gas")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": "0x3b9aca01" // 1000000001\n}\n')),(0,l.kt)("h3",{id:"quai_feehistory"},"quai_feeHistory"),(0,l.kt)("p",null,"Returns the fee history for a specific range of blocks."),(0,l.kt)("h4",{id:"input-parameters-2"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockCount: Quantity")," - Integer block count to be queried. Maximum value of 1024."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Latest integer block number to be queried."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rewardPercentiles: Array")," - Array of integer reward percentiles. A monotonically increasing list of percentile values to sample from each block's effect priority fees per gas in ascending order, weighted by gas used.")),(0,l.kt)("h3",{id:"example-request-2"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_feeHistory",\n    "params": ["0x2", "0x8", [2, 4, 6]]\n}\n')),(0,l.kt)("h4",{id:"returns-2"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"oldestBlock: Quantity")," - Integer block number of the most recent block queried."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"reward: Array")," - The requested percentiles of effective priority fees per gas of transactions in each block, sorted in ascending order and weighted by gas used."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"baseFeePerGas: Array")," - Base fee per gas in the given block"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasUsedRatio: Array")," - gasUsed/gasLimit ratio in the given block")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "oldestBlock": "0x15d",\n        "reward": [\n            ["0x3b9aca00", "0x3b9aca00", "0x3b9aca00"],\n            ["0x3b9aca00", "0x3b9aca00", "0x3b9aca00"]\n        ],\n        "baseFeePerGas": ["0x12", "0x10", "0x1e"],\n        "gasUsedRatio": [0.0441, 0.0023625]\n    }\n}\n')),(0,l.kt)("h3",{id:"quai_syncing"},"quai_syncing"),(0,l.kt)("p",null,"Returns an indicator of whether the client is actively syncing."),(0,l.kt)("h4",{id:"input-parameters-3"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-3"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_syncing",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-3"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"syncing: Boolean")," - ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," if the client is actively syncing, ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," otherwise.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": true\n}\n')),(0,l.kt)("h3",{id:"quai_chainid"},"quai_chainId"),(0,l.kt)("p",null,"Returns the current chain ID."),(0,l.kt)("h4",{id:"input-parameters-4"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-4"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_chainId",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-4"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"chainId: Quantity")," - The current chain ID.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": "0x1"\n}\n')),(0,l.kt)("h3",{id:"quai_nodelocation"},"quai_nodeLocation"),(0,l.kt)("p",null,"Returns the current node location or context."),(0,l.kt)("h4",{id:"input-parameters-5"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-5"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_nodeLocation",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-5"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"location: Quantity")," - Array of integers corresponding indicating node location. The first entry indicates the node's region, the second indicates the zone.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "result": ["0x1", "0x0"] // [1, 0] or Paxos-1\n}\n')),(0,l.kt)("h3",{id:"quai_blocknumber"},"quai_blockNumber"),(0,l.kt)("p",null,"Returns the latest block number."),(0,l.kt)("h4",{id:"input-parameters-6"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-6"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_blockNumber",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-6"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer number of the most recent block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x2b7"\n}\n')),(0,l.kt)("h3",{id:"quai_getbalance"},"quai_getBalance"),(0,l.kt)("p",null,"Returns the balance of the specified address."),(0,l.kt)("h4",{id:"input-parameters-7"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address to be queried."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity | Tag")," - Integer block number of ",(0,l.kt)("a",{parentName:"li",href:"#default-block-parameter"},"default block parameter"),".")),(0,l.kt)("h4",{id:"example-request-7"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getBalance",\n    "params": ["0x421bc7323295c6b7f2f75fc4c854d4fb600e69e8", "latest"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-7"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"balance: Quantity")," - Integer balance in wei.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x3f28cb71571c7" // 1111111111111111\n}\n')),(0,l.kt)("h3",{id:"quai_getproof"},"quai_getProof"),(0,l.kt)("p",null,"Returns the Merkle-proof for a given account and optional storage keys."),(0,l.kt)("h4",{id:"input-parameters-8"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address for which the Merkle-Proof is being returned."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storageKeys: Array")," - Array of 32-byte storage keys."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity | Tag")," - Integer block number of ",(0,l.kt)("a",{parentName:"li",href:"#default-block-parameter"},"default block parameter"),".")),(0,l.kt)("h4",{id:"example-request-8"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getProof",\n    "params": [\n        "0x7F0d15C7FAae65896648C8273B6d7E43f58Fa842",\n        ["0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"],\n        "latest"\n    ],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-8"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address for the proof."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accountProof: Array")," - RLP-serialized MerkleTree-Nodes, starting with the stateRoot-Node, following the path of the SHA3(address) as key."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"balance: Quantity")," - Balance in wei."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"codeHash: Data")," - 32 bytes, codeHash of the account."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Quantity")," - Nonce of the account."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storageHash: Data")," - 32 bytes, the SHA3 hash of the ",(0,l.kt)("inlineCode",{parentName:"li"},"storageRoot"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storageProof: Array"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"key: Data")," - 32 bytes, the requested storage key."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value: Quantity")," - Value(s) of the storage key(s)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"proof: Array")," - Array of rlp-serialized MerkleTree-Nodes, starting with the storageHash-Node, following the path of the SHA3 (key) as the path.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'// Response\n{\n    "jsonrpc": "2.0",\n    "id": "1",\n    "result": {\n        "address": "0x7f0d15c7faae65896648c8273b6d7e43f58fa842",\n        "accountProof": [\n            "0xf8518080808080a0c330e7e9f2c4d26b65d6a75253887c5aaf97e0f8d4fca55b9c1b4d258acf69b78080808080808080a0eaa68ff161bff8212a577807d9d5031f7298825a42777c9837dad04d377595d68080",\n            "0xf870a03380c7b7ae81a58eb98d9c78de4a1fd7fd9535fc953ed2be602daaa41767312ab84df84b808706943fdbce684ba056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a0c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"\n        ],\n        "balance": "0x0",\n        "codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",\n        "nonce": "0x0",\n        "storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n        "storageProof": [\n            {\n                "key": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n                "value": "0x0",\n                "proof": []\n            }\n        ]\n    }\n}\n')),(0,l.kt)("h3",{id:"quai_getheaderhashbynumber"},"quai_getHeaderHashByNumber"),(0,l.kt)("p",null,"Returns the hash of the block header for a specific block number."),(0,l.kt)("h4",{id:"input-parameters-9"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number.")),(0,l.kt)("h4",{id:"example-request-9"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getHeaderHashByNumber",\n    "params": ["0x15d"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-9"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x0000024ccfb37a6e7ba09a3541c6c1e614e64809cc1b742acad2451e22764d6c"\n}\n')),(0,l.kt)("h3",{id:"quai_getheaderbyhash"},"quai_getHeaderByHash"),(0,l.kt)("p",null,"Returns the block header for a specific block hash."),(0,l.kt)("h4",{id:"input-parameters-10"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header.")),(0,l.kt)("h4",{id:"example-request-10"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getHeaderByHash",\n    "params": ["0x0000024ccfb37a6e7ba09a3541c6c1e614e64809cc1b742acad2451e22764d6c"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-10"},"Returns"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Object")," - the block header. All arrays within the object are organized by descending context."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"baseFeePerGas: Quantity")," - The base fee per gas for the block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"difficulty: Quantity")," - Integer of the difficulty for this block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"extRollupRoot: Data")," - 32 bytes, hash of all external transactions emitted since the previous coincident block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"extTransactionsRoot: Data")," - 32 bytes, root of the external transaction trie of each block since the previous coincident block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"extraData: Data"),' - The "extra data" field of this block, contains a byte string.'),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasLimit: Quantity")," - The maximum gas allowed in this block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasUsed: Quantity")," - The total used gas by all transactions in this block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hash: Data")," - 32 bytes, the hash of the block header."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"location: Quantity")," - RLP encoded location of the block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"manifestHash: []<Data>")," - 32 bytes, the hashes of the block manifest for each block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"miner: Data")," - 20 bytes, the address to whom the mining rewards were paid to."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Data")," - 8 bytes, hash of the generated proof-of-work, ",(0,l.kt)("inlineCode",{parentName:"li"},"null")," when the block is pending."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"number: []<Quantity>")," - Integer block numbers with the format ","[Prime, Region, Zone]","."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"parentDeltaS: []<Quantity>")," - Change in parent block entropy with the format ","[Prime, Region, Zone]","."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"parentEntropy: []<Quantity>")," - Parent block entropy with the format ","[Prime, Region, Zone]","."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"parentHash: Data")," - 32 bytes, the hash of the parent block with the format ","[Prime, Region, Zone]","."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"receiptsRoot: Data")," - 32 bytes, receipt trie root hash of the block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"sha3Uncles: Data")," - 32 bytes, SHA3 of the uncles data in the block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"stateRoot: Data")," - 32 bytes, the root of the final state trie of the block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"timestamp: Quantity")," - Integer of the unix timestamp for when the block was collated."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionsRoot: Data")," - 32 bytes, the root of the transaction trie of the block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "baseFeePerGas": "0x1",\n        "difficulty": "0x16d317",\n        "extRollupRoot": "0xaa43773538ebb8494ee7d895d87c114304bc69306c888da2fb40d45d639b2d79",\n        "extTransactionsRoot": "0xcde1249dcffdb0ecca318d39cf08a4384767c4956f1b0f323d4ed8dbf50a7b53",\n        "extraData": "0xdf8776302e31312e3087676f2d7175616988676f312e32302e36856c696e7578",\n        "gasLimit": "0x4c4b400",\n        "gasUsed": "0x252ba0",\n        "hash": "0x0000085526a97d1b4e1613e3aa7dd01f9cef01525d242a42f203355e8c7dfcb6",\n        "location": "0x0000",\n        "manifestHash": [\n            "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n            "0x4b4e182d76c7a56ca896e8021bb9e1d339498cef5e0f36c0b78efd49406357b1",\n            "0x6bdf6d340cce48815db7c19c4d1ea2dcddb235ab09b05a8914748c98af7432cf"\n        ],\n        "miner": "0x05795ed14cdb744781b50d8061a00f42c2124f93",\n        "nonce": "0x29c868751a5ec0fc",\n        "number": ["0x11", "0x7f", "0x2b5"],\n        "parentDeltaS": ["0x0", "0x7582f1cd923e1b7e34d", "0x5980ead1726f9d7639"],\n        "parentEntropy": ["0x1c8a963601e57daef58dd", "0x1b12cce80621f70c0af16", "0x1b1864f6b3391e05e254f"],\n        "parentHash": [\n            "0x0000022550f6aeb9f4db37d54b159bc0812916f246a74909e1b9ce7616d5dd7f",\n            "0x000007c122e2cf197cf507062ad9ce285de7273a853226116d38f47466f4c3ad",\n            "0x000006a97da5e1cf29f92dbb83df5568132dc9e962106c1fc343d313fc250f46"\n        ],\n        "receiptsRoot": "0x2db04a8f2dcb99b453f3941bdc522d0fcc6cc1e0dd76a8f21d55e97bd1c3804a",\n        "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",\n        "size": "0x20d",\n        "stateRoot": "0x0082f4c0ff72f767dedc1da8033c756ed72c3a8baa0f9b4d7f7bfe9d587d82d4",\n        "timestamp": "0x64c7fb18",\n        "transactionsRoot": "0x50806865e11d4eb8deecba6cd8b926b7d9c9b85497d78476687ca5577d93d4a2"\n    }\n}\n')),(0,l.kt)("h3",{id:"quai_getheaderbynumber"},"quai_getHeaderByNumber"),(0,l.kt)("p",null,"Returns the block header for a given block number."),(0,l.kt)("h4",{id:"input-parameters-11"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number.")),(0,l.kt)("h4",{id:"example-request-11"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getHeaderByNumber",\n    "params": ["0x15d"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-11"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_getheaderbyhash"},"quai_getHeaderByHash"))),(0,l.kt)("h3",{id:"quai_getblockbynumber"},"quai_getBlockByNumber"),(0,l.kt)("p",null,"Returns the block for a given block number."),(0,l.kt)("h4",{id:"input-parameters-12"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"full: Boolean")," - If ",(0,l.kt)("inlineCode",{parentName:"li"},"true"),", returns the full transaction objects, if ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," returns the transaction hashes. Defaults to ",(0,l.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,l.kt)("h4",{id:"example-request-12"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getBlockByNumber",\n    "params": ["0x15d", true],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-12"},"Returns"),(0,l.kt)("p",null,"The response for ",(0,l.kt)("a",{parentName:"p",href:"#quai_blockbynumber"},(0,l.kt)("inlineCode",{parentName:"a"},"getBlockByNumber"))," is largely the same as the response for ",(0,l.kt)("a",{parentName:"p",href:"#quai_getheaderbyhash"},(0,l.kt)("inlineCode",{parentName:"a"},"getHeaderByHash")),", with the addition of the following fields:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"extTransactions: []<Data>")," - Array of 32 byte external transaction hashes."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"subManifest: []<Data>")," - Array of all 32 byte subordinate block hashes since the last coincident block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactions: []<Data>")," - Array of 32 byter internal transaction hashes."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uncles: []<Data>")," - Array of ",(0,l.kt)("strong",{parentName:"li"},"//TODO FIGURE THIS OUT AND GET A BLOCK THAT HAS AN UNCLE"))),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"subManifest")," will always be empty in zone blocks. Both ",(0,l.kt)("inlineCode",{parentName:"p"},"transactions")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"extTransactions")," will be empty in region and prime blocks.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "baseFeePerGas": "0x1",\n        "difficulty": "0x195a93",\n        "extRollupRoot": "0x246f5df00f42ea6c6b3ce50709c1a5ed01effd053be9fd55c8e7a01a5fdd0e75",\n        "extTransactions": ["0xf65280bd108ec7aabb32e68b48ad129a6abfff2cdb28d4187c2229dabc7dd9c6"],\n        "extTransactionsRoot": "0xc9b954a741c868ee033c7a769470f71779326a46bd654c8248a9a684b03f60f7",\n        "extraData": "0xdf8776302e31312e3087676f2d7175616988676f312e32302e36856c696e7578",\n        "gasLimit": "0x4c4b400",\n        "gasUsed": "0x2e248",\n        "hash": "0x0000023ee6f37ecaa871f52068e6c020b899d6bafc6efa7a6ce11a062bd2db2e",\n        "location": "0x0000",\n        "manifestHash": [\n            "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n            "0x89850f64186b9da266bc7675ffc919b348f05e0fde66039d8edcaaa33b527024",\n            "0xfcedd8bed59b82a4d43507d15f1e36661644784369c7543d76216fe501222b5c"\n        ],\n        "miner": "0x05795ed14cdb744781b50d8061a00f42c2124f93",\n        "nonce": "0x77bbf39f5610b167",\n        "number": ["0x9", "0x43", "0x15e"],\n        "order": 2,\n        "parentDeltaS": ["0x0", "0x5f74cf155fd3b35cae7", "0x45b983cac85b6d849a"],\n        "parentEntropy": ["0xdbafb89c01f36e7178f9", "0xc570126e27f3a630caa3", "0xc5b5cbf1f2bc019e4f3d"],\n        "parentHash": [\n            "0x000004c76cbf7feb9a14344238c3a32010695100130cc699f44eec051999b2d0",\n            "0x000002e68ba4766a7fd55f233c676e35b330f168b657a0895264535ac30d652e",\n            "0x0000024ccfb37a6e7ba09a3541c6c1e614e64809cc1b742acad2451e22764d6c"\n        ],\n        "receiptsRoot": "0x943ec93fea96d218dbba1f5efb16af09488339c75ee733412c74375972bd9694",\n        "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",\n        "size": "0x62e",\n        "stateRoot": "0x4dcd52b88572709f4f07cfcd80c14b19a26e42d30fdacfb8da74b587a1248114",\n        "subManifest": [],\n        "timestamp": "0x64c7df3b",\n        "totalEntropy": "0xc5cca1261d7817679ecd",\n        "transactions": [\n            "0x197c7e5ec7bee1a11fd3f45faf55fe2072b5948fe3d8d4bf8bb493458194be50",\n            "0x786177297ab60b4da659dafb170f29cde1b7d7173fa6a637895faaba4b5dd379",\n            "0x37c915d0321d2cbdbcdd7c337845a1313fa0c57b7935b8b8070745c9328c3468",\n            "0xf9a562a193c6b931ee15fce582fa7783bf27d5c45c62d418a329cf106ee4c07f",\n            "0x1148714f16086177fc5d08ab00f67b20cf7aadb1eaace0e04b55b2571779c46a",\n            "0x7651be3900e0a5c4e35d3af2da38ce2faa0d4ea45f1a75c27ea1d641067f722e",\n            "0xbddfe2598d376008adf60c92d1078ef7bffd3eba5170ee5df4509f16f4396d0b",\n            "0x83362686984a0d66a656205482ed2fdaa5ea85c4082abd10914ea841731615ca"\n        ],\n        "transactionsRoot": "0xbeb22d0d3169d16dfae20eba72d013a5f21566328298cd5e9a53177197b66f3d",\n        "uncles": []\n    }\n}\n')),(0,l.kt)("h3",{id:"quai_getblockbyhash"},"quai_getBlockByHash"),(0,l.kt)("p",null,"Returns the block for a given block hash."),(0,l.kt)("h4",{id:"input-parameters-13"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"full: Boolean")," - If ",(0,l.kt)("inlineCode",{parentName:"li"},"true"),", returns the full transaction objects, if ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," returns the transaction hashes. Defaults to ",(0,l.kt)("inlineCode",{parentName:"li"},"false"),".")),(0,l.kt)("h4",{id:"example-request-13"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getBlockByHash",\n    "params": ["0x0000023ee6f37ecaa871f52068e6c020b899d6bafc6efa7a6ce11a062bd2db2e", true],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-13"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_getblockbynumber"},"quai_getBlockByNumber"))),(0,l.kt)("h3",{id:"quai_getunclebyblocknumberandindex"},"quai_getUncleByBlockNumberAndIndex"),(0,l.kt)("p",null,"Returns the uncle block data for a specific block number and uncle index."),(0,l.kt)("h4",{id:"input-parameters-14"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uncleIndex: Quantity")," - Integer uncle index.")),(0,l.kt)("h4",{id:"example-request-14"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getUncleByBlockNumberAndIndex",\n    "params": ["0x15d", "0x0"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-14"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_getblockbynumber"},"quai_getBlockByNumber"),". Uncles do not contain individual transactions.")),(0,l.kt)("h3",{id:"quai_getunclebyblockhashandindex"},"quai_getUncleByBlockHashAndIndex"),(0,l.kt)("p",null,"Returns the uncle block data for a specific block hash and uncle index."),(0,l.kt)("h4",{id:"input-parameters-15"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uncleIndex: Quantity")," - Integer uncle index.")),(0,l.kt)("h4",{id:"example-request-15"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getUncleByBlockHashAndIndex",\n    "params": ["0x0000023ee6f37ecaa871f52068e6c020b899d6bafc6efa7a6ce11a062bd2db2e", "0x0"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-15"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_getblockbyhash"},"quai_getBlockByHash"),". Uncles do not contain individual transactions.")),(0,l.kt)("h3",{id:"quai_getunclecountbyblocknumber"},"quai_getUncleCountByBlockNumber"),(0,l.kt)("p",null,"Returns the number of uncles for specific block."),(0,l.kt)("h4",{id:"input-parameters-16"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number.")),(0,l.kt)("h4",{id:"example-request-16"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getUncleCountByBlockNumber",\n    "params": ["0x15d"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-16"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uncleCount: Quantity")," - Integer of the number of uncles in this block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x2"\n}\n')),(0,l.kt)("h3",{id:"quai_getunclecountbyblockhash"},"quai_getUncleCountByBlockHash"),(0,l.kt)("p",null,"Returns the number of uncles for a specific block hash."),(0,l.kt)("h4",{id:"input-parameters-17"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header.")),(0,l.kt)("h4",{id:"example-request-17"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getUncleCountByBlockHash",\n    "params": ["0x0000023ee6f37ecaa871f52068e6c020b899d6bafc6efa7a6ce11a062bd2db2e"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-17"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uncleCount: Quantity")," - Integer number of uncles in this block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x2"\n}\n')),(0,l.kt)("h3",{id:"quai_getcode"},"quai_getCode"),(0,l.kt)("p",null,"Returns the code stored at a given address."),(0,l.kt)("h4",{id:"input-parameters-18"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address at which the code is stored."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity | Tag")," - Integer block number of ",(0,l.kt)("a",{parentName:"li",href:"#default-block-parameter"},"default block parameter"),".")),(0,l.kt)("h4",{id:"example-request-18"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getCode",\n    "params": ["0x421bc7323295c6b7f2f75fc4c854d4fb600e69e8", "latest"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-18"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"code: Data")," - The code at the given address.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x6080604052348015600f57600080fd5b50607e8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063037a417c14602d575b600080fd5b60336049565b6040518082815260200191505060405180910390f35b6000600190509056fea165627a7a72305820e710d7394e9965c17ead6bb53757a23caee28d75a0a02b483638015a49dac6070029"\n}\n')),(0,l.kt)("h3",{id:"quai_getstorageat"},"quai_getStorageAt"),(0,l.kt)("p",null,"Returns the value from a storage position at a given address."),(0,l.kt)("h4",{id:"input-parameters-19"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address of the storage."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"position: Data")," - Value corresponding to the storage position."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity | Tag")," - Integer block number of ",(0,l.kt)("a",{parentName:"li",href:"#default-block-parameter"},"default block parameter"),".")),(0,l.kt)("h4",{id:"example-request-19"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getStorageAt",\n    "params": [\n        "0x421bc7323295c6b7f2f75fc4c854d4fb600e69e8",\n        "0x0000000000000000000000000000000000000000000000000000000000000003",\n        "latest"\n    ],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-19"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"storageValue: Data")," - The value at the given storage position.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x0000000000000000000000000000000000000000000000000000000000004d2"\n}\n')),(0,l.kt)("h3",{id:"quai_call"},"quai_call"),(0,l.kt)("p",null,"Executes a new message call without creating a transaction on chain."),(0,l.kt)("h4",{id:"input-parameters-20"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction call object:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"from: Data")," - 20 bytes, address the transaction is being sent from. (optional)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to: Data")," - 20 bytes, address the transaction is being sent to."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas: Quantity")," - Integer of the gas provided for the transaction execution. (optional)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gasPrice: Quantity")," - Integer of the gasPrice used for each paid gas. (optional)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value: Quantity")," - Integer of the value sent within the transaction. (optional)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"data: Data")," - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. (optional)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity | Tag")," - Integer block number of ",(0,l.kt)("a",{parentName:"li",href:"#default-block-parameter"},"default block parameter"),".")),(0,l.kt)("h4",{id:"example-request-20"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_call",\n    "params": [\n        {\n            "from": "0x02E4dD4F66E018fD2bddf57467D4bB359D72b705",\n            "to": "0x0864B3aab87584b337a92aB1fCfCcf6dad2463Db",\n            "gas": "0x5208",\n            "value": "0x10F2C",\n            "data": "0x"\n        },\n        "latest"\n    ],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-20"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"callData: Data")," - Value of the executed contract method.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x"\n}\n')),(0,l.kt)("h3",{id:"quai_sendrawtransaction"},"quai_sendRawTransaction"),(0,l.kt)("p",null,"Creates new message call transaction or a contract creation for signed transactions."),(0,l.kt)("h4",{id:"input-parameters-21"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionData: Data")," - Raw bytecode of the signed and serialized transaction.")),(0,l.kt)("h4",{id:"example-request-21"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_sendRawTransaction",\n    "params": ["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-21"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash: Data")," - 32 bytes, the transaction hash, or the zero hash if the transaction is not yet available.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"\n}\n')),(0,l.kt)("h3",{id:"quai_estimategas"},"quai_estimateGas"),(0,l.kt)("p",null,"Computes and returns an estimate of how much gas is required to execute the given transaction. While this method provides a relatively accurate assessment of gas, the correctness of the estimation may vary due to network congestion or node performance."),(0,l.kt)("h4",{id:"input-parameters-22"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai-call"},"quai_call")," input parameters.")),(0,l.kt)("h4",{id:"example-request-22"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_estimateGas",\n    "params": [\n        {\n            "from": "0x00114a47a5d39ea2022dd4d864cb62cfd16879fc",\n            "to": "0x0815543066c60A1dE7F224B940c9EA755fb7aED7",\n            "value": "0x10F2C",\n            "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"\n        },\n        "latest"\n    ],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-22"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas: Quantity")," - Estimated amount of gas required for transaction execution.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x5498"\n}\n')),(0,l.kt)("h3",{id:"quai_getblocktransactioncountbynumber"},"quai_getBlockTransactionCountByNumber"),(0,l.kt)("p",null,"Returns the transaction count in a block given a block number."),(0,l.kt)("h4",{id:"input-parameters-23"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number.")),(0,l.kt)("h4",{id:"example-request-23"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getBlockTransactionCountByNumber",\n    "params": ["0x15d"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-23"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionCount: Quantity")," - Integer number of transactions in this block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x8"\n}\n')),(0,l.kt)("h3",{id:"quai_getblocktransactioncountbyhash"},"quai_getBlockTransactionCountByHash"),(0,l.kt)("p",null,"Returns the transaction count in a block given a block hash."),(0,l.kt)("h4",{id:"input-parameters-24"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header.")),(0,l.kt)("h4",{id:"example-request-24"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getBlockTransactionCountByHash",\n    "params": ["0x000000ab1cdac1ed32f8fc362664652acbd84e4d82f8ad1cc7b5ac87390a1e9c"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-24"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionCount: Quantity")," - Integer number of transactions in this block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x156"\n}\n')),(0,l.kt)("h3",{id:"quai_gettransactionbyblocknumberandindex"},"quai_getTransactionByBlockNumberAndIndex"),(0,l.kt)("p",null,"Returns transaction data for a given transaction index and block number."),(0,l.kt)("h4",{id:"input-parameters-25"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex: Quantity")," - Integer transaction index.")),(0,l.kt)("h4",{id:"example-request-25"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getTransactionByBlockNumberAndIndex",\n    "params": ["0x2FB", "0x4"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-25"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, hash of the block the transaction was included in."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number the transaction was included in."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"from: Data")," - 20 bytes, address of the sender."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"gas: Quantity")," - Total integer amount of gas used to execute the transaction in wei."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"maxFeePerGas: Quantity")," - The maximum fee per gas, computed as ",(0,l.kt)("inlineCode",{parentName:"li"},"baseFeePerGas")," + ",(0,l.kt)("inlineCode",{parentName:"li"},"maxPriorityFeePerGas"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"maxPriorityFeePerGas: Quantity")," - The maximum priority fee per gas."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"hash: Data")," - 32 bytes, hash of the transaction."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"input: Data")," - The data sent along with the transaction."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Quantity")," - Integer of the number of transactions made by the sender prior to this one."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"to: Data")," - 20 bytes, address of the receiver. ",(0,l.kt)("inlineCode",{parentName:"li"},"null")," when the transaction is a contract creation transaction."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex: Quantity")," - Integer of the transaction's index position in the block."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value: Quantity")," - Integer of the value sent with this transaction in wei."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"type: Quantity")," - Integer of the transaction type."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"accessList: Array")," - Array of access lists. //TODO DEFINE ACCESS LIST SOMEWHERE"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"chainId: Quantity")," - Integer of the chain ID this transaction was submitted to, null when its pending."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"v: Quantity")," - ECDSA recovery ID."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"r: Quantity")," - ECDSA signature r."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"s: Quantity")," - ECDSA signature s.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "blockHash": "0x000000ab1cdac1ed32f8fc362664652acbd84e4d82f8ad1cc7b5ac87390a1e9c",\n        "blockNumber": "0x2fb",\n        "from": "0x18bcfc12f2b9407bce57da68db98da38dee42aba",\n        "gas": "0xa410",\n        "maxFeePerGas": "0x77359404",\n        "maxPriorityFeePerGas": "0x3b9aca00",\n        "hash": "0x0d3f1705df59f289e3d8786bfab56d6459e0a43ed0d5aadca699eb91a9e312fd",\n        "input": "0x",\n        "nonce": "0x24",\n        "to": "0x084ef3826dc20f452ebc0d7f228ebf76049669e9",\n        "transactionIndex": "0x4",\n        "value": "0x22",\n        "type": "0x0",\n        "accessList": [],\n        "chainId": "0x2328",\n        "v": "0x0",\n        "r": "0x9c648964997efe2be83462387d9f93eeaaa859c5c533b8ff8cc94820dc5034ae",\n        "s": "0x75167792deae44fe430328c59a814f4ccb571b5cbabebd1db1c0a3960acfbaf1"\n    }\n}\n')),(0,l.kt)("h3",{id:"quai_gettransactionbyblockhashandindex"},"quai_getTransactionByBlockHashAndIndex"),(0,l.kt)("p",null,"Returns transaction data for a given transaction index and block hash."),(0,l.kt)("h4",{id:"input-parameters-26"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex: Quantity")," - Integer transaction index.")),(0,l.kt)("h4",{id:"example-request-26"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getTransactionByBlockHashAndIndex",\n    "params": ["0x000000ab1cdac1ed32f8fc362664652acbd84e4d82f8ad1cc7b5ac87390a1e9c", "0x4"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-26"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_gettransactionbyblocknumberandindex"},"quai_getTransactionByBlockNumberAndIndex"))),(0,l.kt)("h3",{id:"quai_getrawtransactionbyblocknumberandindex"},"quai_getRawTransactionByBlockNumberAndIndex"),(0,l.kt)("p",null,"Returns the raw transaction byte sequence for a given transaction index and block number."),(0,l.kt)("h4",{id:"input-parameters-27"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockNumber: Quantity")," - Integer block number."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex: Quantity")," - Integer transaction index.")),(0,l.kt)("h4",{id:"example-request-27"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getRawTransactionByBlockNumberAndIndex",\n    "params": ["0x2FB", "0x3"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-27"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rawTransaction: Data")," - The raw transaction byte sequence.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x00f86c82232824843b9aca00847735940482a41094111a8a2ffb1729497e0cfbfc5fa2e2b405e13ba74f80c080a01c2ae1b000172a500f1a7e6e9265264d9ba9e9edd835411bf4233f3f2b05c7d9a01f9e48da332873ea7514b5ffa17febd543a7a9d0ef20651a4b14a394c0333837"\n}\n')),(0,l.kt)("h3",{id:"quai_getrawtransactionbyblockhashandindex"},"quai_getRawTransactionByBlockHashAndIndex"),(0,l.kt)("p",null,"Returns the raw transaction byte sequence for a given transaction index and block hash."),(0,l.kt)("h4",{id:"input-parameters-28"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHash: Data")," - 32 bytes, the hash of the block header."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionIndex: Quantity")," - Integer transaction index.")),(0,l.kt)("h4",{id:"example-request-28"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getRawTransactionByBlockHashAndIndex",\n    "params": ["0x000000ab1cdac1ed32f8fc362664652acbd84e4d82f8ad1cc7b5ac87390a1e9c", "0x3"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-28"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_getrawtransactionbyblocknumberandindex"},"quai_getRawTransactionByBlockNumberAndIndex"))),(0,l.kt)("h3",{id:"quai_gettransactioncount"},"quai_getTransactionCount"),(0,l.kt)("p",null,"Returns the total transaction count for a give address."),(0,l.kt)("h4",{id:"input-parameters-29"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address of the account."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Quantity | Tag")," - Integer block number of ",(0,l.kt)("a",{parentName:"li",href:"#default-block-parameter"},"default block parameter"),".")),(0,l.kt)("h4",{id:"example-request-29"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getTransactionCount",\n    "params": ["0x02E4dD4F66E018fD2bddf57467D4bB359D72b705", "latest"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-29"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionCount: Quantity")," - Integer of the number of transactions made by the sender.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x357"\n}\n')),(0,l.kt)("h3",{id:"quai_gettransactionbyhash"},"quai_getTransactionByHash"),(0,l.kt)("p",null,"Returns the transaction data for a given transaction hash."),(0,l.kt)("h4",{id:"input-parameters-30"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash: Data")," - 32 bytes, the hash of the transaction.")),(0,l.kt)("h4",{id:"example-request-30"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getTransactionByHash",\n    "params": ["0xc3b4ce64b533d33d6bbe48219ca980def6f336c263e3f3e1231aac526fc67ea3"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-30"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_gettransactionbyblocknumberandindex"},"quai_getTransactionByBlockNumberAndIndex"))),(0,l.kt)("h3",{id:"quai_getrawtransactionbyhash"},"quai_getRawTransactionByHash"),(0,l.kt)("p",null,"Returns the raw transaction byte sequence for a given transaction hash."),(0,l.kt)("h4",{id:"input-parameters-31"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionHash: Data")," - 32 bytes, the hash of the transaction.")),(0,l.kt)("h4",{id:"example-request-31"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "quai_getRawTransactionByHash",\n    "params": ["0xc3b4ce64b533d33d6bbe48219ca980def6f336c263e3f3e1231aac526fc67ea3"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-31"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#quai_getrawtransactionbyblocknumberandindex"},"quai_getRawTransactionByBlockNumberAndIndex"))),(0,l.kt)("h3",{id:"txpool_content"},"txpool_content"),(0,l.kt)("p",null,"Returns the current content of the trnasaction pool."),(0,l.kt)("h4",{id:"input-parameters-32"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-32"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "txpool_content",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-32"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pending: Object")," - Pending transactions.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the transaction origin address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Quantity")," - Transaction nonce.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionData: Object")," - Individual transaction data, see ",(0,l.kt)("a",{parentName:"li",href:"#quai_gettransactionbyhash"},"quai_getTransactionByHash")," for details."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"queued: Object")," - Queued transactions.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the transaction origin address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Quantity")," - Transaction nonce.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionData: Object")," - Individual transaction data, see ",(0,l.kt)("a",{parentName:"li",href:"#quai_gettransactionbyhash"},"quai_getTransactionByHash")," for details.")))))))),(0,l.kt)("p",null,"The pending and queued objects contain mappings of origin addresses to batches of transactions. The transaction batches contain mappings of transaction nonces to individual transaction data sets. Below is a simplified representation of the return of this method"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "pending": {\n            "0x1dbbB54b402E725aD96fEc342AF5150a1560D4c7": {\n                "855": {\n                    // txdata\n                },\n                "856": {\n                    // txdata\n                }\n            }\n        },\n\n        "queued": {\n            "0x1dbe6AB96F7fe24634E382FD0e2F17Ddcb0C7A7f": {\n                "12": {\n                    // txdata\n                },\n                "13": {\n                    // txdata\n                }\n            }\n        }\n    }\n}\n')),(0,l.kt)("h3",{id:"txpool_contentfrom"},"txpool_contentFrom"),(0,l.kt)("p",null,"Returns transactions in the txpool from the given address, grouped by nonce."),(0,l.kt)("h4",{id:"input-parameters-33"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the address of the account.")),(0,l.kt)("h4",{id:"example-request-33"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "txpool_contentFrom",\n    "params": ["0x1dbbB54b402E725aD96fEc342AF5150a1560D4c7"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-33"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"See ",(0,l.kt)("a",{parentName:"li",href:"#txpool_content"},"txpool_content"))),(0,l.kt)("h3",{id:"txpool_inspect"},"txpool_inspect"),(0,l.kt)("p",null,"Returns a summarized form of the transaction pool content."),(0,l.kt)("h4",{id:"input-parameters-34"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-34"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "txpool_inspect",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-34"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pending: Object")," - Pending transactions.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the transaction origin address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Quantity")," - Transaction nonce.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionData: Object")," - Summarized transaction data."))))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"queued: Object")," - Queued transactions.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"address: Data")," - 20 bytes, the transaction origin address.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nonce: Quantity")," - Transaction nonce.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transactionData: Object")," - Summarized transaction data.")))))))),(0,l.kt)("p",null,"The pending and queued objects contain mappings of origin addresses to batches of transactions. The transaction batches contain mappings of transaction nonces to summarized transaction data sets."),(0,l.kt)("p",null,'Summarized transaction data is returned as a string in the following format: "',(0,l.kt)("inlineCode",{parentName:"p"},"toAddress"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"gasPrice * gasLimit + maxFeePerGas * gasLimit + value"),". Below is a simplified representation of the return of this method"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "pending": {\n            "0x1dbbB54b402E725aD96fEc342AF5150a1560D4c7": {\n                "855": "0x0",\n                "856": "0x0"\n            }\n        },\n\n        "queued": {\n            "0x1dbe6AB96F7fe24634E382FD0e2F17Ddcb0C7A7f": {\n                "12": "0x0",\n                "13": "0x0"\n            }\n        }\n    }\n}\n')),(0,l.kt)("h3",{id:"txpool_status"},"txpool_status"),(0,l.kt)("p",null,"Returns statistics on the current transaction pool."),(0,l.kt)("h4",{id:"input-parameters-35"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-35"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "txpool_status",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-35"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pending: Quantity")," - Integer number of pending transactions in the pool."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"queued: Quantity")," - Integer number of queued transactions in the pool.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": {\n        "pending": "0x15",\n        "queued": "0x2"\n    }\n}\n')),(0,l.kt)("h3",{id:"net_listening"},"net_listening"),(0,l.kt)("p",null,"Returns a boolean indicator of whether client is listening for network connections."),(0,l.kt)("h4",{id:"input-parameters-36"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-36"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "net_listening",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-36"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"listening: Boolean")," - ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," if listening, ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," if not.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": true\n}\n')),(0,l.kt)("h3",{id:"net_peercount"},"net_peerCount"),(0,l.kt)("p",null,"Returns the number of peers currently connected to the client."),(0,l.kt)("h4",{id:"input-parameters-37"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-37"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "net_peerCount",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-37"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"peerCount: Quantity")," - Integer number of connected peers.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0x2"\n}\n')),(0,l.kt)("h3",{id:"net_version"},"net_version"),(0,l.kt)("p",null,"Returns the devp2p network ID."),(0,l.kt)("h4",{id:"input-parameters-38"},"Input Parameters"),(0,l.kt)("p",null,"No input ",(0,l.kt)("inlineCode",{parentName:"p"},"params")," are required for this method."),(0,l.kt)("h4",{id:"example-request-38"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "net_version",\n    "params": [],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-38"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"version: Quantity")," - Integer network ID.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "1"\n}\n')),(0,l.kt)("h3",{id:"debug_getblockrlp"},"debug_getBlockRlp"),(0,l.kt)("p",null,"Returns the RLP-encoded block at the given height."),(0,l.kt)("h4",{id:"input-parameters-39"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHeight: Quantity")," - Integer block height.")),(0,l.kt)("h4",{id:"example-request-39"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "debug_getBlockRlp",\n    "params": [236],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-39"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockRlp: Data")," - RLP-encoded block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "f90248f90241f863a000000778118b7ba8d0a469aba75fe4555858073a9c4978ee4438666ac90f764da0000003b7cacf186cea2f461e35e6d07ab9cd2471fff8d3e1dcd05fbbfaab2467a0000006b033056dcc1536c0f7cc147f162d34193a3f4cfe30c04f61bfc1a31e8aa00000004b21fd39375e31bb65c154e664379029a0b2daaca8706a330025f4464ea01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d493479405795ed14cdb744781b50d8061a00f42c2124f93a0928ae2893122e7c2af305e72561d22d6860ce2927416f76ce5d180ec26757572a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421f863a056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421a00e00f344bb81ee328a3c8423a91766e0f54987c641fb7a5cd5775cb0c1ddecf9a09a016b8b5a148c5512f70d669cab9f52250dce5630b422183fa9aacbcdb5539ea056e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421831b2d16e18a8961923f721bfb16f8fe8a7261eb9977af13f1eacc8a72fd96f242af7f00baddd6808a03fcf10c629d51345df7899bab58cb006b0ed011c4063081ec8404c4b40080018200008464d2c493a0df8776302e31312e3087676f2d7175616988676f312e32302e36856c696e7578885ad5129a55c962edc0c0c0c0"\n}\n')),(0,l.kt)("h3",{id:"debug_printblock"},"debug_printBlock"),(0,l.kt)("p",null,"Retrieves a block and returns its pretty printed form."),(0,l.kt)("h4",{id:"input-parameters-40"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"blockHeight: Quantity")," - Integer block height.")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The response of this method is formatted for use in a terminal. To view the response in the proper format, paste the response into a terminal and run the command ",(0,l.kt)("inlineCode",{parentName:"p"},"echo <response>"),".")),(0,l.kt)("h4",{id:"example-request-40"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "debug_printBlock",\n    "params": [236],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-40"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Block: data")," - Compact representation of a block.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "(*types.Block)(0xc021a8a9a0)({\\n header: (*types.Header)(0xc022209200)({\\n  parentHash: ([]common.Hash) (len=3 cap=3) {\\n   (common.Hash) (len=32 cap=32) 0x00000778118b7ba8d0a469aba75fe4555858073a9c4978ee4438666ac90f764d,\\n   (common.Hash) (len=32 cap=32) 0x000003b7cacf186cea2f461e35e6d07ab9cd2471fff8d3e1dcd05fbbfaab2467,\\n   (common.Hash) (len=32 cap=32) 0x000006b033056dcc1536c0f7cc147f162d34193a3f4cfe30c04f61bfc1a31e8a\\n  },\\n  terminusHash: (common.Hash) (len=32 cap=32) 0x0000004b21fd39375e31bb65c154e664379029a0b2daaca8706a330025f4464e,\\n  uncleHash: (common.Hash) (len=32 cap=32) 0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347,\\n  coinbase: (common.Address) 0x05795eD14cDB744781B50d8061A00F42c2124f93,\\n  root: (common.Hash) (len=32 cap=32) 0x928ae2893122e7c2af305e72561d22d6860ce2927416f76ce5d180ec26757572,\\n  txHash: (common.Hash) (len=32 cap=32) 0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421,\\n  etxHash: (common.Hash) (len=32 cap=32) 0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421,\\n  etxRollupHash: (common.Hash) (len=32 cap=32) 0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421,\\n  manifestHash: ([]common.Hash) (len=3 cap=3) {\\n   (common.Hash) (len=32 cap=32) 0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421,\\n   (common.Hash) (len=32 cap=32) 0x0e00f344bb81ee328a3c8423a91766e0f54987c641fb7a5cd5775cb0c1ddecf9,\\n   (common.Hash) (len=32 cap=32) 0x9a016b8b5a148c5512f70d669cab9f52250dce5630b422183fa9aacbcdb5539e\\n  },\\n  receiptHash: (common.Hash) (len=32 cap=32) 0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421,\\n  difficulty: (*big.Int)(0xc021a45920)(1781014),\\n  parentEntropy: ([]*big.Int) (len=3 cap=3) {\\n   (*big.Int)(0xc021a45680)(648764080595408793303294),\\n   (*big.Int)(0xc021a456a0)(540156089954153568266956),\\n   (*big.Int)(0xc021a456c0)(543027682127159641553629)\\n  },\\n  parentDeltaS: ([]*big.Int) (len=3 cap=3) {\\n   (*big.Int)(0xc021a45700)(0),\\n   (*big.Int)(0xc021a45720)(18833048321474415582711),\\n   (*big.Int)(0xc021a45740)(2871592173006073286673)\\n  },\\n  number: ([]*big.Int) (len=3 cap=3) {\\n   (*big.Int)(0xc021a458c0)(6),\\n   (*big.Int)(0xc021a458e0)(48),\\n   (*big.Int)(0xc021a45900)(236)\\n  },\\n  gasLimit: (uint64) 80000000,\\n  gasUsed: (uint64) 0,\\n  baseFee: (*big.Int)(0xc021a45940)(1),\\n  location: (common.Location) (len=2 cap=2) {\\n   00000000  00 00                                             |..|\\n  },\\n  time: (uint64) 1691534483,\\n  extra: ([]uint8) (len=32 cap=32) {\\n   00000000  df 87 76 30 2e 31 31 2e  30 87 67 6f 2d 71 75 61  |..v0.11.0.go-qua|\\n   00000010  69 88 67 6f 31 2e 32 30  2e 36 85 6c 69 6e 75 78  |i.go1.20.6.linux|\\n  },\\n  nonce: (types.BlockNonce) (len=8 cap=8) {\\n   00000000  5a d5 12 9a 55 c9 62 ed                           |Z...U.b.|\\n  },\\n  hash: (atomic.Value) {\\n   v: (common.Hash) (len=32 cap=32) 0x0000066a8914d4dd81192c8fba4a11a3ee154dadd3306bf97918b3bdafaab4f2\\n  },\\n  sealHash: (atomic.Value) {\\n   v: (common.Hash) (len=32 cap=32) 0x98187a673bd4a0c75c211d6a33441778336151d5e0b25eaa75a5e2e3db9f90f0\\n  }\\n }),\\n uncles: ([]*types.Header) {\\n },\\n transactions: (types.Transactions) {\\n },\\n extTransactions: (types.Transactions) {\\n },\\n subManifest: (types.BlockManifest) {\\n },\\n size: (atomic.Value) {\\n  v: (interface {}) <nil>\\n },\\n appendTime: (atomic.Value) {\\n  v: (interface {}) <nil>\\n },\\n ReceivedAt: (time.Time) 0001-01-01 00:00:00 +0000 UTC,\\n ReceivedFrom: (interface {}) <nil>\\n})\\n"\n}\n')),(0,l.kt)("h3",{id:"debug_chaindbproperty"},"debug_chaindbProperty"),(0,l.kt)("p",null,"Returns leveldb properties of the key-value database."),(0,l.kt)("h4",{id:"input-parameters-41"},"Input Parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"property: String")," - The property to retrieve.")),(0,l.kt)("h4",{id:"example-request-41"},"Example Request"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "method": "debug_chaindbProperty",\n    "params": ["leveldb.stats"],\n    "id": 1\n}\n')),(0,l.kt)("h4",{id:"returns-41"},"Returns"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"property: data")," - leveldb properties of the key-value database.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "Compactions\\n\n     Level |   Tables   |    Size(MB)   |    Time(sec)  |    Read(MB)   |   Write(MB)\\n\n    -------+------------+---------------+---------------+---------------+---------------\\n\n       0   |          0 |       0.00000 |       4.50687 |       0.00000 |     473.96311\\n\n       1   |          0 |       0.00000 |      16.06760 |    1359.03140 |    1320.56856\\n\n       2   |        233 |     435.44838 |       6.96471 |     522.37173 |     522.31984\\n\n    -------+------------+---------------+---------------+---------------+---------------\\n\n     Total |        233 |     435.44838 |      27.53918 |    1881.40312 |    2316.85150\\n"\n}\n')))}p.isMDXComponent=!0}}]);
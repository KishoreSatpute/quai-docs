"use strict";(self.webpackChunkquai_docs=self.webpackChunkquai_docs||[]).push([[9237],{3905:(e,a,t)=>{t.d(a,{Zo:()=>h,kt:()=>m});var i=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,i,n=function(e,a){if(null==e)return{};var t,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=i.createContext({}),l=function(e){var a=i.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},h=function(e){var a=l(e.components);return i.createElement(c.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return i.createElement(i.Fragment,{},a)}},p=i.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),d=l(t),p=n,m=d["".concat(c,".").concat(p)]||d[p]||u[p]||r;return t?i.createElement(m,o(o({ref:a},h),{},{components:t})):i.createElement(m,o({ref:a},h))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,o=new Array(r);o[0]=p;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[d]="string"==typeof e?e:n,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},6708:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(7462),n=(t(7294),t(3905));const r={title:"Merge-Mined Parachains",description:"How Quai Network can support custom blockchains.",slug:"/parachains",hide_table_of_contents:!1,sidebar_position:3},o="Merge-Mined Parachains",s={unversionedId:"learn/advanced-introduction/merged-mining/parachains",id:"learn/advanced-introduction/merged-mining/parachains",title:"Merge-Mined Parachains",description:"How Quai Network can support custom blockchains.",source:"@site/docs/learn/advanced-introduction/merged-mining/parachains.md",sourceDirName:"learn/advanced-introduction/merged-mining",slug:"/parachains",permalink:"/quai-docs/parachains",draft:!1,editUrl:"https://github.com/dominant-strategies/quai-docs/tree/main/docs/learn/advanced-introduction/merged-mining/parachains.md",tags:[],version:"current",lastUpdatedBy:"maxbibeau",lastUpdatedAt:1692373212,formattedLastUpdatedAt:"Aug 18, 2023",sidebarPosition:3,frontMatter:{title:"Merge-Mined Parachains",description:"How Quai Network can support custom blockchains.",slug:"/parachains",hide_table_of_contents:!1,sidebar_position:3},sidebar:"learnSidebar",previous:{title:"Energy Efficiency",permalink:"/quai-docs/energy-efficiency"},next:{title:"Multithreaded Execution",permalink:"/quai-docs/multithreaded-execution"}},c={},l=[{value:"Why Parachains?",id:"why-parachains",level:2},{value:"Bootstrapping Security",id:"bootstrapping-security",level:2},{value:"Competitive Liveliness",id:"competitive-liveliness",level:2}],h={toc:l},d="wrapper";function u(e){let{components:a,...t}=e;return(0,n.kt)(d,(0,i.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"merge-mined-parachains"},"Merge-Mined Parachains"),(0,n.kt)("p",null,"A merge-mined parachain is a distinct, non-Quai blockchain that uses merged mining with Quai to bootstrap hashpower and liveliness. Merge-mined parachains are distinct from merge-mined sidechains in that they not only inherit security from Quai, but are also hash linked to and interoperable with the canonical network."),(0,n.kt)("p",null,"Merge-mined parachains are aware of the Quai state tree due to the inclusion of an empty parachain datafield in all Quai blocks. This allows for the creation of hash linked references, which enables the transfer of state between Quai Network and merge-mined parachains."),(0,n.kt)("p",null,"Parachains also experience atomic block progression and rollbacks. Atomicity is achieved through the implementation of an aging period on the protocol's entry/exit contract. This aging period will mandate some number of blocks to be produced before the exit of state to a parachain. Any Quai Network rollback will also cause parachain rollbacks, however parachain rollbacks do not cause Quai rollbacks."),(0,n.kt)("h2",{id:"why-parachains"},"Why Parachains?"),(0,n.kt)("p",null,"The architecture of Quai Network and its merge-mined parachains creates a single, homogenous set of chains with a single token, and single value that can be applied across all contexts. Applications that are likely to need their own blockchain to function smoothly, such as social networks and storage services, can utilize an independent, dedicated parachain, while deriving security and state transitions from Quai."),(0,n.kt)("p",null,"Functionally, merge-mined parachains have the capability to resolve the existing heterogeneity of many disparate blockchains with differing user experiences, tokens, and architectures. A blockchain-based data storage solution, for example, could utilize a parachain to store data without bloating the Quai Network state, and still utilize Quai for value transfer and settlement, creating a seamless user experience across all blockchain-based services.\nParachains also assist in maintaining the sustainability of Proof-of-Work. All incentives provided by parachains to attract miners will offset fees that would have been required to be generated by Quai Network and its participants."),(0,n.kt)("h2",{id:"bootstrapping-security"},"Bootstrapping Security"),(0,n.kt)("p",null,"Parachains are able to bootstrap hashpower by merged mining with Quai Network. Quai block headers include an empty data field for parachains to utilize, allowing for the creation of hash linked references between Quai blockchains and merge-mined parachains."),(0,n.kt)("p",null,"Parachains are able to leverage the existing and more powerful hash rate of any Quai blockchain by using a Quai blockchain's header as auxiliary data in parachain blocks and including a valid proof-of-work for a Quai blockchain in the header of a parachain block. Merged mining with Quai makes it more difficult for an attacker to carry out a 51% attack on a parachain, as they would also need to control 51% of the hash rate of the Quai blockchain."),(0,n.kt)("p",null,"The hash linked reference further ensures that if an attacker wants to alter the parachain's history (or if the parachain has an internal issue), they would have to first alter Quai Network's history."),(0,n.kt)("h2",{id:"competitive-liveliness"},"Competitive Liveliness"),(0,n.kt)("p",null,"Merge-mined parachains exist in a competitive environment where liveliness is determined by Quai miners. Parachains will receive liveliness based on how powerfully they are able to incentivize miners to merge-mine that specific parachain. This does not limit the number of parachains that can exist, only the degree of liveliness that any given parachain can have."),(0,n.kt)("p",null,"If only a small subset of Quai miners are also merge-mining a certain parachain, that parachain will see liveliness only when that set of Quai miners successfully mine a block. If a majority of Quai miners are also merge-mining a certain parachain however, that parachain will see high degree of liveliness, as the majority of blocks can be expected to also be valid blocks in that parachain."),(0,n.kt)("p",null,"This creates a highly competitive environment for parachains, where liveliness is determined by market reaction to incentives. Parachains able to offer the most value to Quai miners will receive the highest liveliness."))}u.isMDXComponent=!0}}]);